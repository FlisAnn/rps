[{"/Users/AnnFlismark/Craft_Academy/rps/src/App.jsx":"1","/Users/AnnFlismark/Craft_Academy/rps/src/modules/ChoosingAWinner.js":"2","/Users/AnnFlismark/Craft_Academy/rps/src/components/TopHeader.jsx":"3","/Users/AnnFlismark/Craft_Academy/rps/src/components/DisplayRules.jsx":"4","/Users/AnnFlismark/Craft_Academy/rps/src/components/Footer.jsx":"5"},{"size":4890,"mtime":1608388387106,"results":"6","hashOfConfig":"7"},{"size":1225,"mtime":1608296911251,"results":"8","hashOfConfig":"7"},{"size":285,"mtime":1608297610890,"results":"9","hashOfConfig":"7"},{"size":593,"mtime":1608298059197,"results":"10","hashOfConfig":"7"},{"size":177,"mtime":1608297947785,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"s75sx8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/AnnFlismark/Craft_Academy/rps/src/App.jsx",["25","26","27","28","29"],"import React, { Component } from \"react\";\nimport {\n  Container,\n  Button,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Segment,\n} from \"semantic-ui-react\";\nimport winner from \"./modules/ChoosingAWinner\";\nimport TopHeader from \"./components/TopHeader\";\nimport DisplayRules from \"./components/DisplayRules\";\nimport Footer from \"./components/Footer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.weapons = [\"Rock\", \"paper\", \"scissors\"];\n    this.state = {\n      humanChoice: \"\",\n    };\n  }\n\n  startGame = async (e) => {\n    const choice = Math.floor(Math.random() * 3);\n    console.log(this.weapons[choice]);\n    const result = winner(e.target.name, this.weapons[choice]);\n    this.setState({ result: result });\n  };\n\n  render() {\n    let result;\n\n    if (this.state.result) {\n      result = <p>{this.state.result}</p>;\n    }\n\n    return (\n      <Container id=\"container\">\n        <TopHeader />\n        <DisplayRules />\n        <Button data-cy=\"rock-button\" name=\"rock\" onClick={this.startGame}>\n          Rock\n        </Button>\n        <Button data-cy=\"paper-button\" name=\"paper\" onClick={this.startGame}>\n          Paper\n        </Button>\n        <Button data-cy=\"scissors-button\" name=\"scissors\" onClick={this.startGame}>\n          Scissors\n        </Button>\n        <div id = \"result\">{result}</div>\n        {/* <div>\n          <button\n            name=\"Rock\"\n            data-cy=\"rock-button\"\n            link onClick={this.startGame}\n            \n            name=\"hand rock outline\"\n            size=\"huge\"\n            color=\"pink\"\n          />\n          </div>\n          <div>\n           <Icon\n            name=\"paper\"\n            data-cy=\"paper-button\"\n            link onClick={this.startGame}\n            name=\"hand paper outline\"\n            size=\"huge\"\n            color=\"pink\"\n          />\n          </div>\n          <div>\n           <Icon\n            name=\"scissors\"\n            data-cy=\"scissors-button\"\n            link onClick={this.startGame}\n        \n            name=\"hand scissors outline\"\n            size=\"huge\"\n            color=\"pink\"\n          />\n        </div> */}\n       \n        {/* <Segment placeholder color=\"teal\">\n          <Grid columns={2} stackable textAlign=\"center\">\n            <Divider vertical>VS</Divider>\n\n            <Grid.Row verticalAlign=\"middle\">\n              <Grid.Column>\n                <Header as=\"h2\" color=\"grey\">\n                  You\n                </Header>\n                <Grid.Row icon>\n                  <Button.Group>\n                    <Button icon data-cy=\"rock-button\">\n                      <Icon\n                        name=\"Rock\"\n                        data-cy=\"rock-button\"\n                        onClick={this.startGame}\n                        name=\"hand rock outline\"\n                        size=\"huge\"\n                        color=\"pink\"\n                      />\n                    </Button>\n                    <Button.Or />\n                    <Button\n                      icon\n                      name=\"paper\"\n                      data-cy=\"paper-button\"\n                      onClick={this.startGame}\n                    >\n                      <Icon\n                        name=\"hand paper outline\"\n                        size=\"huge\"\n                        color=\"yellow\"\n                        id=\"humanPaper\"\n                      />\n                    </Button>\n                    <Button.Or />\n                    <Button\n                      icon\n                      data-cy=\"scissors-button\"\n                      onClick={this.startGame}\n                    >\n                      <Icon\n                        name=\"hand scissors outline\"\n                        size=\"huge\"\n                        color=\"teal\"\n                        id=\"humanScissors\"\n                      />\n                    </Button>\n                  </Button.Group>\n                </Grid.Row>\n\n                <Header id=\"human\" color=\"grey\">\n                  Rock, Paper or Scissors?\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment> */}\n\n        {/* <button data-cy=\"rock-button\" name=\"rock\" onClick={this.startGame}>\n          Rock\n        </button>\n        <button data-cy=\"paper-button\" name=\"paper\" onClick={this.startGame}>\n          Paper\n        </button>\n        <button data-cy=\"scissors-button\" name=\"scissors\" onClick={this.startGame}>\n          Scissors\n        </button> */}\n\n        \n        {/* <button data-cy=\"rock-computer\">Rock</button>\n        <button data-cy=\"paper-computer\">Paper</button>\n        <button data-cy=\"scissors-computer\">Scissors</button> */} \n        {/* <p data-cy=\"tie-message\">It's a tie!</p>\n        <p data-cy=\"human-wins\">You win!</p>\n        <p data-cy=\"computer-wins\">Computer wins!</p> */}\n        <Footer />\n      </Container>\n    );\n  }\n}\nexport default App;\n","/Users/AnnFlismark/Craft_Academy/rps/src/modules/ChoosingAWinner.js",["30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48"],"const winner = (humanChoice, computerChoice) => {\n  let result;\n\n  switch (true) {\n    case humanChoice == \"rock\" && computerChoice == \"rock\":\n      return result = (\"It's a tie!\");\n    case humanChoice == \"rock\" && computerChoice == \"scissors\":\n      return result = (\"You win!\");\n    case humanChoice == \"rock\" && computerChoice == \"paper\":\n      return result = (\"Computer wins!\");\n\n    case humanChoice == \"paper\" && computerChoice == \"paper\":\n      return result = (\"It's a tie!\");\n    case humanChoice == \"paper\" && computerChoice == \"rock\":\n      return result = (\"You win!\");\n    case humanChoice == \"paper\" && computerChoice == \"scissors\":\n      return result = (\"Computer wins!\");\n\n    case humanChoice == \"scissors\" && computerChoice == \"scissors\":\n      return result = (\"It's a tie!\");\n    case humanChoice == \"scissors\" && computerChoice == \"paper\":\n      return result = (\"You win!\");\n    case humanChoice == \"scissors\" && computerChoice == \"rock\":\n      return result = (\"Computer wins!\");\n  }\n  return result;\n};\nexport default winner;\n\n\n\n// `Computer selected ${computerChoice} and it is a tie`\n// `Computer selected ${computerChoice} and you won!`\n// `Computer selected ${computerChoice} and Computer won!`",["49","50"],"/Users/AnnFlismark/Craft_Academy/rps/src/components/TopHeader.jsx",[],"/Users/AnnFlismark/Craft_Academy/rps/src/components/DisplayRules.jsx",[],"/Users/AnnFlismark/Craft_Academy/rps/src/components/Footer.jsx",[],{"ruleId":"51","severity":1,"message":"52","line":5,"column":3,"nodeType":"53","messageId":"54","endLine":5,"endColumn":10},{"ruleId":"51","severity":1,"message":"55","line":6,"column":3,"nodeType":"53","messageId":"54","endLine":6,"endColumn":7},{"ruleId":"51","severity":1,"message":"56","line":7,"column":3,"nodeType":"53","messageId":"54","endLine":7,"endColumn":9},{"ruleId":"51","severity":1,"message":"57","line":8,"column":3,"nodeType":"53","messageId":"54","endLine":8,"endColumn":7},{"ruleId":"51","severity":1,"message":"58","line":9,"column":3,"nodeType":"53","messageId":"54","endLine":9,"endColumn":10},{"ruleId":"59","severity":1,"message":"60","line":4,"column":3,"nodeType":"61","messageId":"62","endLine":25,"endColumn":4},{"ruleId":"63","severity":1,"message":"64","line":5,"column":22,"nodeType":"65","messageId":"66","endLine":5,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":5,"column":50,"nodeType":"65","messageId":"66","endLine":5,"endColumn":52},{"ruleId":"63","severity":1,"message":"64","line":7,"column":22,"nodeType":"65","messageId":"66","endLine":7,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":7,"column":50,"nodeType":"65","messageId":"66","endLine":7,"endColumn":52},{"ruleId":"63","severity":1,"message":"64","line":9,"column":22,"nodeType":"65","messageId":"66","endLine":9,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":9,"column":50,"nodeType":"65","messageId":"66","endLine":9,"endColumn":52},{"ruleId":"63","severity":1,"message":"64","line":12,"column":22,"nodeType":"65","messageId":"66","endLine":12,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":12,"column":51,"nodeType":"65","messageId":"66","endLine":12,"endColumn":53},{"ruleId":"63","severity":1,"message":"64","line":14,"column":22,"nodeType":"65","messageId":"66","endLine":14,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":14,"column":51,"nodeType":"65","messageId":"66","endLine":14,"endColumn":53},{"ruleId":"63","severity":1,"message":"64","line":16,"column":22,"nodeType":"65","messageId":"66","endLine":16,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":16,"column":51,"nodeType":"65","messageId":"66","endLine":16,"endColumn":53},{"ruleId":"63","severity":1,"message":"64","line":19,"column":22,"nodeType":"65","messageId":"66","endLine":19,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":19,"column":54,"nodeType":"65","messageId":"66","endLine":19,"endColumn":56},{"ruleId":"63","severity":1,"message":"64","line":21,"column":22,"nodeType":"65","messageId":"66","endLine":21,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":21,"column":54,"nodeType":"65","messageId":"66","endLine":21,"endColumn":56},{"ruleId":"63","severity":1,"message":"64","line":23,"column":22,"nodeType":"65","messageId":"66","endLine":23,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":23,"column":54,"nodeType":"65","messageId":"66","endLine":23,"endColumn":56},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Header' is defined but never used.","'Icon' is defined but never used.","'Segment' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-global-assign","no-unsafe-negation"]